

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Sunat_BE
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class BD_Sunat1Entities : DbContext
{
    public BD_Sunat1Entities()
        : base("name=BD_Sunat1Entities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<Usuario1> Usuario1 { get; set; }

    public virtual DbSet<Token> Token { get; set; }


    public virtual ObjectResult<ObtenerEmpresa_Result> ObtenerEmpresa(string idEmpresa, string key)
    {

        var idEmpresaParameter = idEmpresa != null ?
            new ObjectParameter("idEmpresa", idEmpresa) :
            new ObjectParameter("idEmpresa", typeof(string));


        var keyParameter = key != null ?
            new ObjectParameter("key", key) :
            new ObjectParameter("key", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerEmpresa_Result>("ObtenerEmpresa", idEmpresaParameter, keyParameter);
    }


    public virtual ObjectResult<ObtenerEmpresaTodas_Result> ObtenerEmpresaTodas()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerEmpresaTodas_Result>("ObtenerEmpresaTodas");
    }


    public virtual ObjectResult<Nullable<int>> ValidarUsuario(string username, string pass)
    {

        var usernameParameter = username != null ?
            new ObjectParameter("Username", username) :
            new ObjectParameter("Username", typeof(string));


        var passParameter = pass != null ?
            new ObjectParameter("Pass", pass) :
            new ObjectParameter("Pass", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ValidarUsuario", usernameParameter, passParameter);
    }


    public virtual ObjectResult<Nullable<int>> Login(string username, string pass)
    {

        var usernameParameter = username != null ?
            new ObjectParameter("Username", username) :
            new ObjectParameter("Username", typeof(string));


        var passParameter = pass != null ?
            new ObjectParameter("Pass", pass) :
            new ObjectParameter("Pass", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Login", usernameParameter, passParameter);
    }


    public virtual int AgregarEmpresa(string idEmpresa, string nombre, string llave, Nullable<int> estado)
    {

        var idEmpresaParameter = idEmpresa != null ?
            new ObjectParameter("IdEmpresa", idEmpresa) :
            new ObjectParameter("IdEmpresa", typeof(string));


        var nombreParameter = nombre != null ?
            new ObjectParameter("Nombre", nombre) :
            new ObjectParameter("Nombre", typeof(string));


        var llaveParameter = llave != null ?
            new ObjectParameter("Llave", llave) :
            new ObjectParameter("Llave", typeof(string));


        var estadoParameter = estado.HasValue ?
            new ObjectParameter("Estado", estado) :
            new ObjectParameter("Estado", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarEmpresa", idEmpresaParameter, nombreParameter, llaveParameter, estadoParameter);
    }


    public virtual int BorrarEmpresa(string idempresa)
    {

        var idempresaParameter = idempresa != null ?
            new ObjectParameter("Idempresa", idempresa) :
            new ObjectParameter("Idempresa", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BorrarEmpresa", idempresaParameter);
    }


    public virtual int ModificarEmpresa(string idempresa, string nombre, string llave, Nullable<int> estado)
    {

        var idempresaParameter = idempresa != null ?
            new ObjectParameter("Idempresa", idempresa) :
            new ObjectParameter("Idempresa", typeof(string));


        var nombreParameter = nombre != null ?
            new ObjectParameter("Nombre", nombre) :
            new ObjectParameter("Nombre", typeof(string));


        var llaveParameter = llave != null ?
            new ObjectParameter("Llave", llave) :
            new ObjectParameter("Llave", typeof(string));


        var estadoParameter = estado.HasValue ?
            new ObjectParameter("Estado", estado) :
            new ObjectParameter("Estado", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarEmpresa", idempresaParameter, nombreParameter, llaveParameter, estadoParameter);
    }


    public virtual int EditarEmpresa(string idempresa, string nombre, string llave, Nullable<int> estado)
    {

        var idempresaParameter = idempresa != null ?
            new ObjectParameter("Idempresa", idempresa) :
            new ObjectParameter("Idempresa", typeof(string));


        var nombreParameter = nombre != null ?
            new ObjectParameter("Nombre", nombre) :
            new ObjectParameter("Nombre", typeof(string));


        var llaveParameter = llave != null ?
            new ObjectParameter("Llave", llave) :
            new ObjectParameter("Llave", typeof(string));


        var estadoParameter = estado.HasValue ?
            new ObjectParameter("Estado", estado) :
            new ObjectParameter("Estado", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarEmpresa", idempresaParameter, nombreParameter, llaveParameter, estadoParameter);
    }


    public virtual int EliminarEmpresa(string idempresa)
    {

        var idempresaParameter = idempresa != null ?
            new ObjectParameter("Idempresa", idempresa) :
            new ObjectParameter("Idempresa", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarEmpresa", idempresaParameter);
    }


    public virtual ObjectResult<byte[]> Sp_Login(string idUsuario, string clave)
    {

        var idUsuarioParameter = idUsuario != null ?
            new ObjectParameter("IdUsuario", idUsuario) :
            new ObjectParameter("IdUsuario", typeof(string));


        var claveParameter = clave != null ?
            new ObjectParameter("clave", clave) :
            new ObjectParameter("clave", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("Sp_Login", idUsuarioParameter, claveParameter);
    }


    public virtual ObjectResult<string> Sp_Login_Token(string idUsuario, string clave, string tOKEN)
    {

        var idUsuarioParameter = idUsuario != null ?
            new ObjectParameter("IdUsuario", idUsuario) :
            new ObjectParameter("IdUsuario", typeof(string));


        var claveParameter = clave != null ?
            new ObjectParameter("clave", clave) :
            new ObjectParameter("clave", typeof(string));


        var tOKENParameter = tOKEN != null ?
            new ObjectParameter("TOKEN", tOKEN) :
            new ObjectParameter("TOKEN", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Login_Token", idUsuarioParameter, claveParameter, tOKENParameter);
    }


    public virtual ObjectResult<ObtenerUsuario_Result> ObtenerUsuario(string idUsuario)
    {

        var idUsuarioParameter = idUsuario != null ?
            new ObjectParameter("idUsuario", idUsuario) :
            new ObjectParameter("idUsuario", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerUsuario_Result>("ObtenerUsuario", idUsuarioParameter);
    }

}

}

